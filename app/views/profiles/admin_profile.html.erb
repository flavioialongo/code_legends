<div class="container mx-auto h-screen">
  <section class="flex items-center justify-center h-full bg-gradient-to-br from-gray-800 via-gray-900 to-black">
    <div class="text-center px-4 w-full h-full">

      <!-- Sezione Proposte da Revisionare -->
      <div class="mb-6">
        <button onclick="toggleSection('challenges')" class="w-full text-left bg-gray-700 text-gray-300 font-semibold py-3 px-4 rounded-lg shadow-md hover:bg-gray-600 transition-transform transform hover:scale-105">
          Proposte da Revisionare
        </button>
        <div id="challenges" class="hidden mt-2">
          <table class="min-w-full bg-gray-800 border border-gray-700 rounded-lg shadow-md mb-6">
            <thead>
            <tr class="bg-gray-700">
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Descrizione</th>
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Test Case</th>
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Azione</th>
            </tr>
            </thead>
            <tbody>
            <% @challenges_proposals.each do |challenge| %>
              <tr class="border-b border-gray-700 hover:bg-gray-600 transition-colors duration-200">
                <td class="px-6 py-4 text-gray-200"><%= challenge.title %></td>
                <td class="px-6 py-4 text-gray-200"><%= challenge.description %></td>
                <td class="px-6 py-4 text-gray-200"><%= challenge.language%></td>
                <td class="px-6 py-4 text-gray-200"><%= challenge.user_id %></td>
                <td class="px-6 py-4 text-gray-200"><%= challenge.test_cases%></td>
                <td class="px-6 py-4 text-center">
                  <% p "HELLOOOO" %>
                  <% p challenge.id %>
                  <%= button_to 'Accetta', new_challenge_path, params: {challenge_proposal_id: challenge.id}, class: 'bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded-full transition duration-300 transform hover:scale-110', method: :get %>
                  <%= form_with url: reject_challenge_proposal_path(challenge.id), method: :post, id: "reject-form", local: true do %>
                    <%= hidden_field_tag :reject_motivation, nil, id: "reject-motivation" %>
                    <%= submit_tag 'Rifiuta', id: "reject-button", class: 'bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded-full transition duration-300 transform hover:scale-110 mt-2 ml-2' %>
                  <% end %>
                </td>
              </tr>
            <% end %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Sezione Utenti non Admin -->
      <div class="mb-6">
        <button onclick="toggleSection('non-admin-users')" class="w-full text-left bg-gray-700 text-gray-300 font-semibold py-3 px-4 rounded-lg shadow-md hover:bg-gray-600 transition-transform transform hover:scale-105">
          Utenti non Admin
        </button>
        <div id="non-admin-users" class="hidden mt-2">
          <table class="min-w-full bg-gray-800 border border-gray-700 rounded-lg shadow-md mb-6">
            <thead>
            <tr class="bg-gray-700">
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Nome</th>
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Email</th>
              <th class="px-6 py-3 text-center text-gray-300 font-medium">Azione</th>
            </tr>
            </thead>
            <tbody>
            <% @non_admin_users.each do |user| %>
              <tr class="border-b border-gray-700 hover:bg-gray-600 transition-colors duration-200">
                <td class="px-6 py-4 text-gray-200"><%= user.username %></td>
                <td class="px-6 py-4 text-gray-200"><%= user.email %></td>
                <td class="px-6 py-4 text-center">
                  <%= button_to 'Promuovi a Admin',  promote_to_admin_profiles_path(user.id), method: :post, class: "bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-full transition duration-300 transform hover:scale-110" %>
                </td>
              </tr>
            <% end %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="mt-10 mb-6">
        <%= link_to 'Torna alla Home', play_now_path, class: 'bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-4 rounded-full transition duration-300 transform hover:scale-105 shadow-md' %>
      </div>
    </div>
  </section>
</div>

<script>
    function toggleSection(sectionId) {
        const section = document.getElementById(sectionId);
        section.classList.toggle('hidden');

        const isHidden = section.classList.contains('hidden');
        localStorage.setItem(sectionId, isHidden ? 'hidden' : 'visible');
    }

    function loadSectionStates() {
        const challengeState = localStorage.getItem('challenges');
        const nonAdminUserState = localStorage.getItem('non-admin-users');

        if (challengeState === 'visible') {
            document.getElementById('challenges').classList.remove('hidden');
        }
        if (nonAdminUserState === 'visible') {
            document.getElementById('non-admin-users').classList.remove('hidden');
        }
    }

    function saveSectionStates() {
        const challengesSection = document.getElementById('challenges');
        const nonAdminUsersSection = document.getElementById('non-admin-users');

        localStorage.setItem('challenges', challengesSection.classList.contains('hidden') ? 'hidden' : 'visible');
        localStorage.setItem('non-admin-users', nonAdminUsersSection.classList.contains('hidden') ? 'hidden' : 'visible');
    }

    window.onload = loadSectionStates;

    document.addEventListener("turbo:load", () => {
        const rejectButton = document.querySelector("#reject-button");
        const rejectForm = document.querySelector("#reject-form");
        const rejectMotivationField = document.querySelector("#reject-motivation");

        if (rejectButton && rejectForm && rejectMotivationField) {
            rejectButton.addEventListener("click", (event) => {
                // Prevent default form submission
                event.preventDefault();

                // Prompt user for rejection reason
                const reason = prompt('Inserisci il motivo del rifiuto:');
                if (reason !== null && reason.trim() !== '') {
                    // Set the hidden field with the rejection reason
                    rejectMotivationField.value = reason.trim();

                    // Submit the form
                    rejectForm.submit();
                } else {
                    alert("Il motivo del rifiuto non pu√≤ essere vuoto.");
                }
            });
        }
    });



</script>
