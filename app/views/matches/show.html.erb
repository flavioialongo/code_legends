<div class="flex flex-col h-full w-full bg-gray-900 text-white">
  <!-- Header Section -->
  <div class="flex flex-col text-center p-4 bg-gray-800 border-b border-gray-700">
    <h1 class="text-2xl font-semibold text-white mb-2">Dettagli della Sfida</h1>
    <div class="text-white space-y-2">
      <p><strong>Player 1:</strong> <%= @match.player_1.username %></p>
      <p><strong>Player 2:</strong> <%= @match.player_2.username %></p>
      <p><strong>Language:</strong> <%= @match.language %></p>
      <input type="hidden" id="match-id" value="<%= @match.id %>" />
    </div>
  </div>

  <!-- Main Content Section -->
  <div class="flex flex-row justify-center space-x-8 px-6 py-6 overflow-auto">
    <!-- Left Column -->
    <div class="flex flex-col grow space-y-6">
      <!-- Code Editor Box -->
      <div class="flex flex-col bg-gray-800 h-[30rem] p-4 rounded-lg shadow-lg">
        <div class="flex flex-row py-2 justify-between items-center border-b border-gray-700 mb-4">
          <h2 class="text-lg font-bold">CODICE</h2>
          <h2 class="text-lg font-bold"><%= @selected_language %></h2>
          <%= hidden_field_tag :language, @selected_language, id: 'hidden-language-selection' %>
        </div>
        <div class="overflow-auto h-full">
          <div id="code-editor" class="bg-black rounded-lg p-2" data-language="<%= @selected_language %>">
            <%= hidden_field_tag :code, '', id: 'hidden-code-input' %>
          </div>
        </div>
      </div>

      <!-- Console Box -->
      <div class="flex flex-col bg-gray-800 p-4 h-[15rem] rounded-lg shadow-lg">
        <h2 class="text-lg font-bold text-center">CONSOLE</h2>
        <div class="bg-[#2d2d2d] text-white mt-2 p-4 h-full overflow-auto rounded-lg">
          <pre id="output" class="text-lime-500 font-mono"></pre>
        </div>
      </div>
    </div>

    <!-- Right Column -->
    <div class="flex flex-col w-1/4 p-4 space-y-6 bg-gray-800 rounded-lg shadow-lg">
      <!-- Run Code Button -->
      <%= form_with(url: match_execute_code_path(@match.id), method: :post, id: 'execute-form', class: "overflow-hidden") do %>
        <%= submit_tag "Run Code", id: "submit-code", class: "px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 w-full transition duration-200" %>
      <% end %>

      <!-- Chat Box -->
      <div class="flex flex-col bg-gray-800 p-4 max-h-[26rem] rounded-lg shadow-lg">
        <h2 class="text-lg font-bold text-center mb-2">CHAT</h2>
        <div class="bg-gray-700 text-white p-2 h-full overflow-y-auto rounded-lg max-h-[26rem]" id="chat-container">
          <div id="chat" class="w-full space-y-2">
            <%= render @match.chat_messages.includes(:user) %>
          </div>
        </div>
      </div>

      <!-- Message Form -->
      <%= form_with model: [@match, ChatMessage.new], id: 'chat-form', local: false, class: "flex flex-col space-y-2" do |form| %>
        <%= form.text_field :content, id: 'chat-input', class: 'w-full px-3 py-2 text-black rounded mb-2', placeholder: 'Scrivi un messaggio...', autocomplete: 'off', data: { user_id: current_user.id } %>
        <%= form.hidden_field :user_id, value: current_user.id %>
        <%= form.submit 'Invia', class: 'px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-200' %>
      <% end %>


      <!-- Surrender Button -->
      <%= form_with(url: match_surrender_path(@match), method: :post, id: 'surrender-form', class: "overflow-hidden") do %>
        <%= submit_tag "Surrender", id: "surrender-submit", class: "px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 w-full transition duration-200" %>
      <% end %>
    </div>
  </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const form = document.getElementById('execute-form');
        const output = document.getElementById('output');
        const surrenderButton = document.getElementById('surrender-form');

        form.addEventListener('submit', function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Gather form data
            const formData = new FormData(form);
            formData.set("code", editor.state.doc.toString().trimEnd());

            // Perform the AJAX request using Fetch API
            fetch(form.action, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json', // Expect JSON response
                },
                body: formData
            })
                .then(response => response.json())  // Return the parsed JSON
                .then(data => {
                    // Update the output area with the result
                    output.textContent = data.output;
                })
                .catch(error => console.error('ERROR:', error));
        });
    })
</script>
