  <% icons = [
    { id: 'profile-icon', class: 'profile-icon', onclick: 'gotoProfile()', text: 'My Profile', alt: 'File Icon' },
    { id: 'challenge-friend-icon', class: 'challenge-friend-icon', onclick: 'openChallengeModal()', text: 'Challenge a Friend', alt: 'Challenge a Friend Icon' },
    { id: 'find-opponent-icon', class: 'find-opponent-icon', onclick: 'gotoPlayNow()', text: 'Find Opponent', alt: 'Find Opponent Icon' },
    { id: 'create-challenge-icon', class: 'create-challenge-icon', onclick: 'gotoNewChallenge()', text: 'Create Challenge', alt: 'Create Challenge Icon' },
    { id: 'leaderboard-icon', class: 'leaderboard-icon', onclick: 'gotoLeaderboard()', text: 'Leaderboard', alt: 'Leaderboard Icon' }
  ] %>

  <% if @current_user.admin? %>
    <% icons << { id: 'admin-profile-icon', class: 'admin-profile-icon', onclick: 'gotoAdminProfile()', text: 'Admin Profile', alt: 'Admin Profile Icon' } %>
  <% end %>

  <% icons.each do |icon| %>
    <div id="<%= icon[:id] %>" class="<%= icon[:class] %>" ondblclick="<%= icon[:onclick] %>">
      <% icon_filename = "#{icon[:id]}.png" %>
      <img src="<%= asset_path(icon_filename) %>" alt="<%= icon[:alt] %>">
      <p><%= icon[:text] %></p>
    </div>
<% end %>

<!-- Aggiunta della div mancante -->
<div class="window">
  <header>
    <div class="title-program">CodeLegends</div>
    <div class="button-container">
      <div class="button minus">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14" />
        </svg>
      </div>
      <div class="button resize">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 0 0-2.25-2.25H6A2.25 2.25 0 0 0 3.75 6v8.25A2.25 2.25 0 0 0 6 16.5h2.25m8.25-8.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-7.5A2.25 2.25 0 0 1 8.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 0 0-2.25 2.25v6" />
        </svg>
      </div>
      <div class="button exit" id="close-terminal-button">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </div>
    </div>
  </header>

  <section class="terminal">
    <%= form_with(url: challenge_proposals_path, model: @challenge_proposal, local: true, class: "w-full max-w-4xl mx-auto p-8 bg-gray-800 rounded-lg shadow-md") do |f| %>
      <div class="mb-6">
        <%= f.label :title, "Title*", class: "block text-white text-lg font-semibold mb-2" %>
        <%= f.text_field :title, required:true, class: "w-full px-4 py-2 rounded bg-gray-700 text-white border border-gray-600 focus:ring-4 focus:ring-blue-500 focus:border-transparent" %>
      </div>

      <div class="mb-6">
        <%= f.label :description, "Description*", class: "block text-white text-lg font-semibold mb-2" %>
        <%= f.text_area :description, rows: 4, required:true, class: "w-full px-4 py-2 rounded bg-gray-700 text-white border border-gray-600 focus:ring-4 focus:ring-blue-500 focus:border-transparent" %>
      </div>

      <div class="mb-6">
        <%= f.select :language, [['Python', 'python3'], ['Java', 'java'], ['C++', 'cpp']],
                     { prompt: 'Select Language*' },
                     { id: 'language', class: 'w-full p-2 bg-gray-700 text-white rounded-lg', required: true } %>
      </div>

      <div class="mb-6">
        <%= f.label :test_cases, "Test Cases (JSON FORMAT)*", class: "block text-white text-lg font-semibold mb-2" %>
        <%= f.text_area :test_cases, rows: 6, required:true, class: "w-full px-4 py-2 rounded bg-gray-700 text-white border border-gray-600 focus:ring-4 focus:ring-blue-500 focus:border-transparent" %>
      </div>


      <div class="flex justify-end">
        <%= f.submit 'Submit Proposal', class: "bg-green-500 text-white px-6 py-3 rounded hover:bg-green-600 transition" %>
      </div>
    <% end %>
  </section>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const closeButton = document.getElementById('close-terminal-button');

        closeButton.addEventListener('click', function() {
            window.location.href = '/';
        });
    });

    updateDateTime();
    setInterval(updateDateTime, 1000);

    function updateDateTime() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        document.getElementById('current-time').textContent = `${hours}:${minutes}`;

        const day = now.getDate().toString().padStart(2, '0');
        const month = (now.getMonth() + 1).toString().padStart(2, '0');
        const year = now.getFullYear();
        document.getElementById('current-date').textContent = `${day}/${month}/${year}`;
    }

    const mailboxModal = document.getElementById('mailboxModal');
    const openMailboxBtn = document.getElementById('openMailbox');
    const closeMailboxBtn = document.getElementById('closeMailbox');

    const requestModal = document.getElementById('requestModal');
    const closeRequestBtn = document.getElementById('closeRequest');

    const challengeModal = document.getElementById('challengeModal');
    const closeChallengeBtn = document.getElementById('closeChallenge');

    // Casella postale
    openMailboxBtn.addEventListener('click', () => {
        mailboxModal.classList.remove('hidden');
    });

    closeMailboxBtn.addEventListener('click', () => {
        mailboxModal.classList.add('hidden');
    });

    // Modale per richieste di amicizia
    document.querySelectorAll('a[data-request-id]').forEach(link => {
        link.addEventListener('click', (event) => {
            event.preventDefault();
            const requestId = link.dataset.requestId;
            const senderName = link.innerText.split(' ')[3]; // Nome del mittente
            document.getElementById('requestMessage').innerText = `Ciao, sono ${senderName}, vuoi diventare mio amico?`;

            requestModal.classList.remove('hidden');
            document.getElementById('acceptRequestForm').action = `/friend_requests/${requestId}/accept`;
            document.getElementById('rejectRequestForm').action = `/friend_requests/${requestId}/reject`;
        });
    });

    closeRequestBtn.addEventListener('click', () => {
        requestModal.classList.add('hidden');
    });

    // Modale per richieste di sfida
    document.querySelectorAll('.challenge-request').forEach(link => {
        link.addEventListener('click', (event) => {
            event.preventDefault();
            const challengeId = link.dataset.challengeId;
            const senderName = link.innerText.split(' ')[3]; // Nome del mittente
            document.getElementById('challengeMessage').innerText = `Hai una nuova sfida da ${senderName}. Accetti?`;

            challengeModal.classList.remove('hidden');
            document.getElementById('acceptChallengeForm').action = `/challenge_requests/${challengeId}/accept`;
            document.getElementById('rejectChallengeForm').action = `/challenge_requests/${challengeId}/reject`;
        });
    });

    closeChallengeBtn.addEventListener('click', () => {
        challengeModal.classList.add('hidden');
    });
</script>
